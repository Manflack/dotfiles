name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: ğŸš€ Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-10.15
          - ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Set current repository for pull requests
        run: |
          echo "DOTFILES_PR_REPOSITORY=${{ github.event.pull_request.head.repo.full_name }}" >> $GITHUB_ENV
      - name: Set current repository and branch
        run: |
          echo "DOTFILES_REPOSITORY=${DOTFILES_PR_REPOSITORY:-franciscoruizar/dotfiles}" >> $GITHUB_ENV
          echo "DOTFILES_BRANCH=${{ github.head_ref }}" >> $GITHUB_ENV
          echo "DOTFILES_ENV=CI" >> $GITHUB_ENV
      - name: Install
        run: echo "$HOME/.dotfiles" | bash installer

      - name: Debug on error
        if: ${{ failure() }}
        run: |
          echo "DOTFILES_REPOSITORY: $DOTFILES_REPOSITORY"
          echo "DOTFILES_BRANCH: $DOTFILES_BRANCH"
          echo "DOTFILES_ENV: $DOTFILES_ENV"
          cat "$HOME/.dotfiles.log"
  static-analysis:
    runs-on: ubuntu-latest
    name: ğŸ’¿ Static analysis
    steps:
      - uses: actions/checkout@v2

      - name: Set needed environment variables
        run: |
          echo "DOTFILES_PATH=$PWD" >> $GITHUB_ENV
      - name: ğŸ’¿ Static analysis
        run: bash scripts/self/static_analysis

  lint:
    runs-on: ubuntu-latest
    name: ğŸ’… Lint
    steps:
      - uses: actions/checkout@v2

      - name: Set needed environment variables
        run: |
          echo "DOTFILES_PATH=$PWD" >> $GITHUB_ENV
          echo "PATH=$PATH:$HOME/go/bin" >> $GITHUB_ENV
      - name: ğŸ“¥ Install shfmt
        run: go get mvdan.cc/sh/v3/cmd/shfmt

      - name: ğŸ’… Lint bash files
        run: bash scripts/self/lint
